@page "/locationAdd"

@using StoryWriter.Components.Layout
@using StoryWriter.Components.Elements
@using StoryWriter.Data.Entities
@using StoryWriter.Services

@inject NavigationManager NavigationManager
@inject LocationService LocationService
@inject StoryService StoryService
@inject AIService AIService

<div class="row">
    <div class="col-8">
        <div class="card h-100">
            <div class="card-header">
                <h3 class="card-title">Add Location</h3>
            </div>
            <div class="card-body">
                <LocationForm Location="@Location" Stories="@Stories" OnStoryChange="OnStoryChange" />
            </div>
            <div class="card-footer">
                <button class="btn btn-primary" @onclick="AddLocation">Save Location</button>
            </div>
        </div>
    </div>
    <div class="col-4">
        <AISuggestion suggestion="@suggestion" ApplySuggestion="ApplySuggestion" GenerateSuggestion="GetSuggestion" />
    </div>
</div>

@code {
    [CascadingParameter]
    private MainLayout MainLayout { get; set; } = default!;
    private LocationEntity Location = new LocationEntity();
    private ICollection<StoryEntity> Stories = new List<StoryEntity>();
    private string suggestion = "AI Suggestion will be here...";

    protected override async Task OnInitializedAsync()
    {
        Stories = (await StoryService.GetAllAsync()).ToList();
    }

    private async Task AddLocation()
    {
        await LocationService.CreateAsync(Location);
        NavigationManager.NavigateTo("/locationList");
    }

    private void OnStoryChange(ChangeEventArgs e)
    {
        if (Guid.TryParse(e.Value?.ToString(), out var storyId))
        {
            Location.Story = Stories.FirstOrDefault(s => s.Id == storyId) ?? new StoryEntity();
        }
    }

    private void ApplySuggestion()
    {
        Location.Description = suggestion;
        StateHasChanged();
    }

    private async Task GetSuggestion()
    {
        MainLayout.ShowLoading(true);
        suggestion = await AIService.GetLocationDescription(Location) ?? string.Empty;
        MainLayout.ShowLoading(false);
    }
}